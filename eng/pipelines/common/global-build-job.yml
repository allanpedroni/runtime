parameters:
  buildConfig: ''
  nameSuffix: ''
  buildArgs: ''
  archType: ''
  osGroup: ''
  osSubgroup: ''
  container: ''
  crossBuild: false
  crossrootfsDir: ''
  variables: []
  targetRid: ''
  timeoutInMinutes: ''
  pool: ''
  platform: ''
  condition: true
  useContinueOnErrorDuringBuild: false
  shouldContinueOnError: false
  useCheckoutBundle: false
  isOfficialBuild: false
  runtimeFlavor: 'coreclr'
  helixQueues: ''
  enablePublishTestResults: false
  testResultsFormat: ''
  extraStepsTemplate: ''
  extraStepsParameters: {}

jobs:
- template: /eng/common/templates/job/job.yml
  parameters:
    name: ${{ format('build_{0}{1}_{2}_{3}_{4}', parameters.osGroup, parameters.osSubgroup, parameters.archType, parameters.buildConfig, parameters.nameSuffix) }}
    displayName: ${{ format('Build {0}{1} {2} {3} {4}', parameters.osGroup, parameters.osSubgroup, parameters.archType, parameters.buildConfig, parameters.nameSuffix) }}
    pool: ${{ parameters.pool }}
    condition: and(succeeded(), ${{ parameters.condition }})
    timeoutInMinutes: ${{ parameters.timeoutInMinutes }}
    enablePublishTestResults: ${{ parameters.enablePublishTestResults }}
    testResultsFormat: ${{ parameters.testResultsFormat }}

    workspace:
      clean: all

    ${{ if eq(parameters.useCheckoutBundle, true) }}:
      dependsOn: checkout

    variables:
      - name: _osParameter
        value: -os ${{ parameters.osGroup }}
      
      - ${{ if and(eq(parameters.osGroup, 'Linux'), eq(parameters.osSubGroup, '_musl')) }}:
        - name: _osParameter
          value: /p:RuntimeOS=linux-musl /p:OutputRid=linux-musl-${{ parameters.archType }}

      # Do not rename as it clashes with MSBuild property in libraries/build-native.proj
      - name: _crossBuildPropertyArg
        value: /p:CrossBuild=${{ parameters.crossBuild }}

      - name: _cxx11Parameter
        ${{ if and(eq(parameters.osGroup, 'Linux'), eq(parameters.archType, 'arm64')) }}:
          value: /p:MonoLLVMUseCxx11Abi=true
        ${{ if and(eq(parameters.osGroup, 'Linux'), not(eq(parameters.archType, 'arm64'))) }}:
          value: /p:MonoLLVMUseCxx11Abi=false

      - name: _officialBuildParameter
        ${{ if eq(parameters.isOfficialBuild, true) }}:
          value: /p:OfficialBuildId=$(Build.BuildNumber)
        ${{ if ne(parameters.isOfficialBuild, true) }}:
          value: ''

      - ${{ if eq(parameters.osGroup, 'Android') }}:
        - name: ANDROID_OPENSSL_AAR
          value: /tmp/openssl-android

      - ${{ each variable in parameters.variables }}:
        - ${{ variable }}

    steps:
      - checkout: self

      - task: Docker@2
        displayName: Initialize First Container
        inputs:
          command: start
          container: centos7-x64

      # - task: Docker@2
      #   displayName: Initialize Second Container
      #   inputs:
      #     command: start
      #     container: musl-x64

      - script: cat /etc/os-release
        displayName: Print First Container Info
        target:
          container: centos7-x64

      # - script: cat /etc/os-release
      #   displayName: Print Second Container Info
      #   target:
      #     container: musl-x64

      - task: Docker@2
        displayName: Stop First Container
        inputs:
          command: stop
          container: centos7-x64

      # - task: Docker@2
      #   displayName: Stop Second Container
      #   inputs:
      #     command: stop
      #     container: musl-x64
